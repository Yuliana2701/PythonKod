"""
break - позволяет прервать выполнение цикла - выйти из цикла, даже если условие еще истинно
continue - пропускает текущую итерацию цикла и переходит к следующей
"""

import  random

# Останавливаем выполнение цикла, если число равно 3
number = 1
while number <= 5:
    if number == 3:
        break # Выход из цикла
        print("Hello") # команда не будет выполнена
    print(number)
    number += 1

print("Работа цикла завершена")

print("============\n")

# Пропустить обработка числа 3
num = 1
while num <= 5:
    if num == 3:
        num += 1
        continue # Прерывает текущую итерацию цикла - переходим к проверке условия
    print(num)
    num += 1

print("============\n")

# Бесконечный цикл - если условие всегда истинно, цикл никогда не завершится. Но, такой цикл можно прервать оператором break

# Программа запрашивает у пользователя числа и считает их сумму, пока пользователь не введет 0

sum = 0
while True :
    # Бесконечный цикл
    number = int(input("Введите число (0 для выхода): "))
    if number == 0 :
        break
    sum += number

print("Сумма чисел:", sum)

# Угадай число
# Программа загадывает число, а пользователь должен его угадать
# Опция 1: Считать кол-во попыток, которые понадобились для угадывания числа
# Опция 2: Пользователю после неудачно попытки говорить больше или меньше загаданное число

# secret_number = 7
secret_number = random.randint(1, 10)
while True :
    guess = int(input("Угадайте число от 0 до 10: "))
    if guess == secret_number:
        print("Поздравляю! Вы угадали")
        break
    else:
        # Когда пользователь ввел неверное число
        if secret_number > guess :
            print("Загаданное число больше чем", guess)
        else:
            print("Загаданное число меньше чем", guess)









